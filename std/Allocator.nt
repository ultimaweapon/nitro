@pub
class Allocator;

impl Allocator {
    @pub
    fn Alloc(size: UInt, align: UInt): *UInt8 {
        @cfg(unix)
        let ptr = aligned_alloc(align, size);

        @cfg(win32)
        let ptr = _aligned_malloc(size, align);

        if ptr == null {
            @cfg(os != "windows")
            abort();

            @cfg(os == "windows")
            asm("int 0x29", in("ecx") 7, out(!) _);
        }

        ptr
    }

    @pub
    fn Free(ptr: *UInt8) {
        @cfg(unix)
        free(ptr);

        @cfg(win32)
        _aligned_free(ptr);
    }

    @cfg(unix)
    @ext(C)
    fn aligned_alloc(align: UInt, size: UInt): *UInt8;

    @cfg(unix)
    @ext(C)
    fn free(ptr: *UInt8);

    @cfg(win32)
    @ext(C)
    fn _aligned_malloc(size: UInt, align: UInt): *UInt8;

    @cfg(win32)
    @ext(C)
    fn _aligned_free(ptr: *UInt8);

    @cfg(unix)
    @ext(C)
    fn abort(): !;
}
